name: Full CI Pipeline

on:
  push:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  lint:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: react-app
    steps:
      - uses: actions/checkout@v3
      - name: Run linter
        run: npm run lint || true  # The '|| true' ensures the workflow continues even if linting fails

  sca:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: react-app
    steps:
      - uses: actions/checkout@v3
      - name: Run SCA scan
        run: npm audit || true  # The '|| true' ensures the workflow continues even if the audit finds issues

  sast:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: react-app
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

  test:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: react-app
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: npm test || true  # The '|| true' ensures the workflow continues even if tests fail

  build-and-push:
    needs: [lint, sca, sast, test]
    runs-on: self-hosted
    defaults:
      run:
        working-directory: react-app
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build Docker image
        run: docker build -t ${{ secrets.REGISTRY_USERNAME }}/react-app:latest .
      - name: Push Docker image
        run: docker push ${{ secrets.REGISTRY_USERNAME }}/react-app:latest

  deploy-to-kubernetes:
    needs: [build-and-push]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f react-app/k8s/deployment.yaml
          kubectl apply -f react-app/k8s/service.yaml
          kubectl rollout status deployment/react-app

  dast:
    runs-on: self-hosted
    if: always()
    steps:
      - name: Skip DAST (disabled mode)
        run: echo "DAST is currently disabled. Skipping scan."
